# Respons√°vel por: Orquestrar a transforma√ß√£o de contatos de raw.contatos_raw para processed.dim_contatos

from datetime import datetime
from config.database import create_schema_processed, create_all_tables
from transform.contacts_dw import ContatosTransformer

# =====================================================
# 1. EXECU√á√ÉO DO SCRIPT - TRANSFORMA√á√ÉO DE CONTATOS
# =====================================================

if __name__ == "__main__":
    try:
        print("\n" + "=" * 70)
        print("üîÑ TRANSFORMA√á√ÉO: CONTATOS RAW ‚Üí DIM_CONTATOS")
        print("=" * 70)
        
        inicio = datetime.now()
        
        # Criar schema processed se n√£o existir
        print("\nüìÇ Verificando schema processed...")
        create_schema_processed()
        
        # Criar tabelas (se n√£o existirem)
        print("üìã Verificando tabelas...")
        create_all_tables()
        
        # Criar e executar o transformer
        print("\nüöÄ Iniciando transforma√ß√£o...")
        transformer = ContatosTransformer()
        transformer.executar_transformacao_completa()
        
        fim = datetime.now()
        tempo_total = fim - inicio
        
        print(f"\n{'='*70}")
        print(f"‚úÖ TRANSFORMA√á√ÉO CONCLU√çDA COM SUCESSO!")
        print(f"‚è±Ô∏è  Tempo total: {tempo_total}")
        print(f"{'='*70}")
        
        print(f"\nüí° PR√ìXIMOS PASSOS:")
        print(f"   1. Validar dados: SELECT * FROM processed.dim_contatos LIMIT 10;")
        print(f"   2. Verificar qualidade dos dados transformados")
        print(f"   3. Executar novamente para processar novos registros")
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Transforma√ß√£o interrompida pelo usu√°rio")
        print("üíæ Dados processados at√© este ponto foram preservados")
    except Exception as e:
        print(f"\n‚ùå ERRO CR√çTICO durante transforma√ß√£o: {e}")
        print("Script interrompido para an√°lise do erro")
        import traceback
        traceback.print_exc()
        raise